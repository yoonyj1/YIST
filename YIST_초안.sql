----------DROP 문 (TABLE)--------------
DROP TABLE CALENDAR;
DROP TABLE REPLY;
DROP TABLE QNA;
DROP TABLE NOTICE;
DROP TABLE MATERIAL_BOARD;
DROP TABLE CERTIFICATE_ATTACHMENT;
DROP TABLE EXAM_ANSWER;
DROP TABLE EXAM_BOARD;
DROP TABLE EXAM_QUESTION;
DROP TABLE EXAM_ATTACHMENT;
DROP TABLE EXAM;
DROP TABLE TASK_SUBMIT;
DROP TABLE TASK_FILE;
DROP TABLE TASK;
DROP TABLE ALARM;
DROP TABLE ATTENDANCE;
DROP TABLE MEMBER;
DROP TABLE SUBJECT;
DROP TABLE CLASS;



----------- DROP (SEQUENCE) ----------
DROP SEQUENCE SEQ_RNO;
DROP SEQUENCE SEQ_QNO;
DROP SEQUENCE SEQ_NNO;
DROP SEQUENCE SEQ_MBNO;
DROP SEQUENCE SEQ_CANO;
DROP SEQUENCE SEQ_ANO;
DROP SEQUENCE SEQ_EBNO;
DROP SEQUENCE SEQ_EANO;
DROP SEQUENCE SEQ_TNO;
DROP SEQUENCE SEQ_TASKNO;
DROP SEQUENCE SEQ_TFNO;
DROP SEQUENCE SEQ_CNO;
DROP SEQUENCE SEQ_SNO;

---------- CREATE (SEQUENCE) ------------
CREATE SEQUENCE SEQ_RNO; -- REPLY
CREATE SEQUENCE SEQ_QNO; -- QNA
CREATE SEQUENCE SEQ_NNO; -- NOTICE
CREATE SEQUENCE SEQ_MBNO; -- MATERIAL_BOARD
CREATE SEQUENCE SEQ_CANO; -- CERTIFICATE_ATTACHMENT
CREATE SEQUENCE SEQ_ANO; -- ALARM
CREATE SEQUENCE SEQ_EBNO; -- EXAM_BOARD
CREATE SEQUENCE SEQ_EANO; -- EXAM_ATTACHMENT
CREATE SEQUENCE SEQ_TNO; -- EXAM
CREATE SEQUENCE SEQ_TASKNO; -- TASK
CREATE SEQUENCE SEQ_TFNO; -- TASK_FILE
CREATE SEQUENCE SEQ_CNO; -- CLASS
CREATE SEQUENCE SEQ_SNO; -- SUBJECT

---------- CREATE (TABLE) ----------------
CREATE TABLE CLASS (
CLASS_NO NUMBER PRIMARY KEY,
CLASS_NAME VARCHAR2(50));

CREATE TABLE SUBJECT (
SUBJECT_NO NUMBER PRIMARY KEY,
CLASS_NO NUMBER REFERENCES CLASS ON DELETE CASCADE,
SUBJECT_NAME VARCHAR2(300) NOT NULL,
START_DATE DATE NOT NULL,
END_DATE DATE NOT NULL,
STATUS VARCHAR2(1) NOT NULL,
DAY VARCHAR2(50) NOT NULL,
MAXIMUM_SEATS NUMBER NOT NULL,
CURRENT_SEATS NUMBER NOT NULL,
FEE NUMBER NOT NULL);

CREATE TABLE MEMBER (
ID VARCHAR2(30) PRIMARY KEY,
NAME VARCHAR2(50) NOT NULL,
PWD VARCHAR2(15) NOT NULL,
BIRTH VARCHAR2(10),
PHONE VARCHAR2(30),
IMAGE VARCHAR2(500) DEFAULT '/resources/common/image/userImg.png'  NOT NULL,
EMAIL VARCHAR2(50) NOT NULL,
POST NUMBER,
ADDRESS VARCHAR2(500),
DETAIL_ADDRESS VARCHAR2(500),
SUBJECT NUMBER REFERENCES SUBJECT ON DELETE CASCADE,
ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
START_DATE DATE,
END_DATE DATE,
STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
SORT NUMBER CHECK(SORT IN(1,2,3)) NOT NULL,
EMPLOYEE_DATE DATE DEFAULT SYSDATE);

CREATE TABLE ATTENDANCE (
ID VARCHAR2(30) PRIMARY KEY,
COUNT NUMBER NOT NULL,
ATTENDANCE_DATE DATE DEFAULT SYSDATE NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'N' NOT NULL,
SUBJECT_NO NUMBER REFERENCES SUBJECT ON DELETE CASCADE);

CREATE TABLE ALARM (
ALARM_NO NUMBER PRIMARY KEY,
ID VARCHAR2(30) REFERENCES MEMBER ON DELETE CASCADE,
ALARM_CONTENT VARCHAR2(300) NOT NULL,
ALARM_TYPE VARCHAR2(20) DEFAULT '일반' CHECK(ALARM_TYPE IN ('공지', '과제', '시험', '일반')),
STATUS VARCHAR2(1) DEFAULT 'N' NOT NULL,
CREATE_DATE DATE NOT NULL);

CREATE TABLE TASK (
TASK_NO NUMBER PRIMARY KEY,
SUBJECT_NO NUMBER REFERENCES SUBJECT ON DELETE CASCADE,
ID VARCHAR2(30) REFERENCES MEMBER ON DELETE CASCADE,
TASK_TITLE VARCHAR2(100) NOT NULL,
TASK_CONTENT VARCHAR2(500) NOT NULL,
START_DATE DATE DEFAULT SYSDATE NOT NULL,
END_DATE DATE NOT NULL);

CREATE TABLE TASK_FILE(
FILE_NO NUMBER PRIMARY KEY,
TASK_NO NUMBER REFERENCES TASK ON DELETE CASCADE,
ORIGIN_NAME VARCHAR2(500) NOT NULL,
CHANGE_NAME VARCHAR2(500) NOT NULL,
FILE_LEVEL NUMBER NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL);

CREATE TABLE TASK_SUBMIT(
TASK_NO NUMBER REFERENCES TASK ON DELETE CASCADE,
ID VARCHAR2(30) REFERENCES MEMBER ON DELETE CASCADE,
SUBMIT_CONTENT VARCHAR2(2000) NOT NULL,
SUBMIT_DATE DATE NOT NULL,
MODIFY_DATE DATE NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'N' NOT NULL);

CREATE TABLE EXAM (
TEST_NO NUMBER PRIMARY KEY,
ID VARCHAR2(30) REFERENCES MEMBER ON DELETE CASCADE,
SUBJECT_NO NUMBER REFERENCES SUBJECT ON DELETE CASCADE,
TEST_TITLE VARCHAR2(100) NOT NULL,
START_DATE DATE DEFAULT SYSDATE NOT NULL,
END_DATE DATE NOT NULL);

CREATE TABLE EXAM_ATTACHMENT(
FILE_NO NUMBER PRIMARY KEY,
TEST_NO NUMBER REFERENCES EXAM ON DELETE CASCADE,
ORIGIN_NAME VARCHAR2(500) NOT NULL,
CHANGE_NAME VARCHAR2(500) NOT NULL,
FILE_LEVEL NUMBER NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'N' NOT NULL);

CREATE TABLE EXAM_QUESTION(
TEST_NO NUMBER REFERENCES EXAM ON DELETE CASCADE,
Q1 VARCHAR2(500) NOT NULL,
Q2 VARCHAR2(500) NOT NULL,
Q3 VARCHAR2(500) NOT NULL,
Q4 VARCHAR2(500) NOT NULL,
Q5 VARCHAR2(500) NOT NULL,
A1 VARCHAR2(500) NOT NULL,
A2 VARCHAR2(500) NOT NULL,
A3 VARCHAR2(500) NOT NULL,
A4 VARCHAR2(500) NOT NULL,
A5 VARCHAR2(500) NOT NULL);

CREATE TABLE EXAM_BOARD(
BOARD_NO NUMBER PRIMARY KEY,
SUBJECT_NO NUMBER REFERENCES SUBJECT ON DELETE CASCADE,
BOARD_TITLE VARCHAR2(600) NOT NULL,
BOARD_WRITER VARCHAR2(30) NOT NULL,
BOARD_CONTENT VARCHAR2(4000) NOT NULL,
ORIGIN_NAME VARCHAR2(500),
CHANGE_NAME VARCHAR2(1000),
CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL);

CREATE TABLE EXAM_ANSWER(
TEST_NO NUMBER REFERENCES EXAM ON DELETE CASCADE,
ID VARCHAR2(30) REFERENCES MEMBER ON DELETE CASCADE,
A1 VARCHAR2(500) NOT NULL,
A2 VARCHAR2(500) NOT NULL,
A3 VARCHAR2(500) NOT NULL,
A4 VARCHAR2(500) NOT NULL,
A5 VARCHAR2(500) NOT NULL,
STAUTS VARCHAR2(1) DEFAULT 'N' NOT NULL,
SCORE NUMBER DEFAULT 0);

CREATE TABLE CERTIFICATE_ATTACHMENT(
FILE_NO NUMBER PRIMARY KEY,
ORIGIN_NAME VARCHAR2(500) NOT NULL,
CHANGE_NAME VARCHAR2(500) NOT NULL,
FILE_LEVEL NUMBER NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL);

CREATE TABLE MATERIAL_BOARD(
BOARD_NO NUMBER PRIMARY KEY,
CLASS_NO NUMBER REFERENCES CLASS ON DELETE CASCADE,
BOARD_TITLE VARCHAR2(500) NOT NULL,
BOARD_WRITER VARCHAR2(30) NOT NULL,
BOARD_CONTENT VARCHAR2(4000) NOT NULL,
ORIGIN_NAME VARCHAR2(500),
CHANGE_NAME VARCHAR2(1000),
COUNT NUMBER NOT NULL,
CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL);

CREATE TABLE NOTICE(
BOARD_NO NUMBER PRIMARY KEY,
BOARD_TITLE VARCHAR2(500) NOT NULL,
BOARD_WRITER VARCHAR2(30) NOT NULL,
BOARD_CONTENT VARCHAR2(4000) NOT NULL,
ORIGIN_NAME VARCHAR2(500),
CHANGE_NAME VARCHAR2(1000),
COUNT NUMBER NOT NULL,
CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
VIEWS NUMBER CHECK (VIEWS IN (1, 2, 3)) NOT NULL);

CREATE TABLE QNA(
BOARD_NO NUMBER PRIMARY KEY,
BOARD_TITLE VARCHAR2(500) NOT NULL,
BOARD_WRITER VARCHAR2(30) NOT NULL,
BOARD_CONTENT VARCHAR2(4000) NOT NULL,
ORIGIN_NAME VARCHAR2(500),
CHANGE_NAME VARCHAR2(1000),
COUNT NUMBER NOT NULL,
CREATE_DATE DATE DEFAULT SYSDATE NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
VIEWS NUMBER CHECK (VIEWS IN (1, 2, 3)) NOT NULL,
ANSWER VARCHAR2(1) DEFAULT 'N' NOT NULL);

CREATE TABLE REPLY(
REPLY_NO NUMBER PRIMARY KEY,
BOARD_NO NUMBER REFERENCES QNA ON DELETE CASCADE,
REPLY_CONTENT VARCHAR2(500) NOT NULL,
REPLY_WRITER VARCHAR2(100) NOT NULL,
REPLY_DATE DATE DEFAULT SYSDATE NOT NULL,
STATUS VARCHAR2(1) DEFAULT 'Y' NOT NULL,
REPLY_STATUS VARCHAR2(1) DEFAULT 'N' NOT NULL,
REF_RNO NUMBER);

CREATE TABLE CALENDAR(
CAL_ID VARCHAR2(50) NOT NULL,
CAL_TITLE VARCHAR2(100),
CAL_START VARCHAR2(50),
CAL_END VARCHAR2(50),
CAL_DESCRIPTION VARCHAR2(1000),
CAL_TYPE VARCHAR2(50),
USERNAME VARCHAR2(50),
BACKGROUNDCOLOR VARCHAR2(50),
TEXTCOLOR VARCHAR2(50),
ALLDAY VARCHAR2(50)
);

--------------------------------------------------------------------------------------------------------------------------

insert into exam values(seq_tno.nextval, 'INSTRUCTOR01', 1, '자료형과 연산자', sysdate, 1, DEFAULT);
insert into exam values(seq_tno.nextval, 'INSTRUCTOR01', 1, '자바시험2', null, null, DEFAULT);
insert into exam values(seq_tno.nextval, 'INSTRUCTOR01', 1, '자바시험3', null, null, DEFAULT);
insert into exam values(seq_tno.nextval, 'INSTRUCTOR01', 1, '자바시험4', null, null, DEFAULT);
insert into exam values(seq_tno.nextval, 'INSTRUCTOR01', 1, '자바시험5', null, null, DEFAULT);

insert into task_submit values(1, 'USER01', '1. 자바는 운영체제와는 독립적으로 실행할 수 있습니다.'||CHR(10)||CHR(13)||'2. 자바는 불필요한 기능을 과감히 제거하여 다른 언어에 비해 배우기가 쉽습니다.'||CHR(10)||CHR(13)||'3. 자바는 자동 메모리 관리 등을 지원하여 다른 언어에 비해 안정성이 높습니다', '2023-04-26',sysdate, 'N', 'N');
insert into task_submit values(1, 'USER05', '1. 자바는 운영체제와는 독립적으로 실행할 수 있습니다.'||CHR(10)||CHR(13)||'2. 자바는 불필요한 기능을 과감히 제거하여 다른 언어에 비해 배우기가 쉽습니다.', '2023-04-27',sysdate, 'N');

insert into exam_question values(1,'resources/instructor/uploadFiles/java_exam1','resources/instructor/uploadFiles/java_exam2','resources/instructor/uploadFiles/java_exam3','resources/instructor/uploadFiles/java_exam4','resources/instructor/uploadFiles/java_exam5','return num1 * num2;','return num1/num2;','return num1 % num2;','return num1 - num2;','return num1 + num2;');
insert into exam_question values(3,'resources/instructor/uploadFiles/java_exam2_1.png','resources/instructor/uploadFiles/java_exam2_2.png','resources/instructor/uploadFiles/java_exam2_3.png','resources/instructor/uploadFiles/java_exam2_4.png','resources/instructor/uploadFiles/java_exam2_5.png','int answer = 0;'||CHR(10)||'if (age > 0 && age <= 120){'||CHR(10)||'answer = (2023 - age);'||CHR(10)||'}'||CHR(10)||'return answer;','rr','d1','11','11');


drop sequence seq_taskno;
create sequence seq_taskno;

select seq_taskno.nextval
from dual;
      
select seq_taskno.currval
from dual;


select
				t.task_no
			  , file_no
			  , subject_no
			  , id
			  , task_title
			  , task_content
			  , to_char(start_date, 'RRRR-MM-DD') as "start_date"
			  , to_char(end_date, 'RRRR-MM-DD') as "end_date"
			  , origin_name
			  , change_name
		      , file_level
			  , tf.status
		from task t
		left outer join task_file tf on (t.task_no = tf.task_no)
		where id = 'INSTRUCTOR01';
        
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
