<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="studentMapper">

<resultMap id="examResultSet" type="ExamS">
	<result column="test_no" property="testNo"></result>
	<result column="id" property="id"></result>
	<result column="subject_no" property="subjectNo"></result>
	<result column="test_title" property="testTitle"></result>
	<result column="exam_date" property="examDate"></result>
	<result column="exam_time" property="examTime"></result>
	<result column="status" property="status"></result>
	<result column="q1" property="q1"></result>
	<result column="q2" property="q2"></result>
	<result column="q3" property="q3"></result>
	<result column="q4" property="q4"></result>
	<result column="q5" property="q5"></result>
	<result column="student_id" property="studentId"></result>
	<result column="a1" property="a1"></result>
	<result column="a2" property="a2"></result>
	<result column="a3" property="a3"></result>
	<result column="a4" property="a4"></result>
	<result column="a5" property="a5"></result>
</resultMap>

<resultMap type="Notice" id="noticeResultSet">
	<result column="board_no" property="boardNo"/>
	<result column="board_title" property="boardTitle"/>
	<result column="board_writer" property="boardWriter"/>
	<result column="board_content" property="boardContent"/>
	<result column="origin_Name" property="originName"/>
	<result column="change_name" property="changeName"/>
	<result column="count" property="count"/>
	<result column="create_date" property="createDate"/>
	<result column="status" property="status"/>
	<result column="views" property="views"/>
</resultMap>

<resultMap type="Material" id="materialResultSet">
	<result column="board_no" property="boardNo" />
	<result column="class_no" property="classNo" />
	<result column="board_title" property="boardTitle" />
	<result column="board_writer" property="boardWriter" />
	<result column="board_content" property="boardContent" />
	<result column="origin_name" property="originName" />
	<result column="change_name" property="changeName" />
	<result column="count" property="count" />
	<result column="create_date" property="createDate" />
	<result column="status" property="status" />
</resultMap>

<resultMap type="TaskS" id="taskResultSet">
	<result column="task_no" property="taskNo" />
	<result column="subject_no" property="subjectNo" />
	<result column="id" property="id" />
	<result column="task_title" property="taskTitle" />
	<result column="task_content" property="taskContent" />
	<result column="start_date" property="startDate" />
	<result column="end_date" property="endDate" />
	<result column="student_id" property="studentId" />
	<result column="submit_content" property="submitContent" />
	<result column="submit_date" property="submitDate" />
	<result column="modify_date" property="modifyDate" />
	<result column="status" property="status" />
	<result column="origin_name" property="originName" />
	<result column="change_name" property="changeName" />
</resultMap>

<resultMap type="TaskSubmitS" id="TaskSubmitResultSet">
	<result column="task_no" property="taskNo" />
	<result column="student_id" property="studentId" />
	<result column="submit_content" property="submitContent" />
	<result column="submit_date" property="submitDate" />
	<result column="modify_date" property="modifyDate" />
	<result column="status" property="status" />
</resultMap>

<resultMap id="alarmResultSet" type="Alarm">
		<result column="alarm_no" property="alarmNo"></result>
		<result column="id" property="id"></result>
		<result column="alarm_content" property="alarmContent"></result>
		<result column="alarm_type" property="alarmType"></result>
		<result column="status" property="status"></result>
		<result column="create_date" property="createDate"></result>
</resultMap>

<resultMap type="Qna" id="qnaResultSet">
	<result column="board_no" property="boardNo" />
	<result column="board_title" property="boardTitle" />
	<result column="board_writer" property="boardWriter" />
	<result column="board_content" property="boardContent" />
	<result column="origin_name" property="originName" />
	<result column="change_name" property="changeName" />
	<result column="count" property="count" />
	<result column="create_date" property="createDate" />
	<result column="status" property="status" />
	<result column="views" property="views" />
	<result column="answer" property="answer" />
</resultMap>

<resultMap type="Member" id="memberResultSet">
	<result column="ID" property="id"/>
	<result column="NAME" property="name"/>
	<result column="PWD" property="pwd"/>
	<result column="SUBJECT" property="subject"/>
	<result column="START_DATE" property="startDate"/>
	<result column="END_DATE" property="endDate"/>
	<result column="STATUS" property="status"/>
	<result column="SORT" property="sort"/>
	<result column="SUBJECT_NAME" property="subjectName"/>
</resultMap>

<select id="selectIns" resultMap="memberResultSet">
	select 
		   name
         , m.subject_name
         , to_char(m.start_date, 'YYYY-MM-DD') as "start_date"
         , to_char(m.end_date, 'YYYY-MM-DD') as "end_date"
	  from member m
      join subject on (subject = subject_no)
     where subject = #{subject}
   	   and sort = 2
</select>

<!-- 메인 공지사항 목록 조회 -->
<select id="mainNotice" resultMap="noticeResultSet">
	<![CDATA[
	select *
	  from
	     (
	       select 
	       		   board_no
			     , board_title
			     , to_char(create_date, 'YYYY-MM-DD') as "create_date"
			  from notice
			 order
			    by create_date desc
	     )
	 where rownum <= 7
	 ]]>
</select>

<!-- 시험 목록 조회 -->
<select id="testList" resultMap="examResultSet">
	select
	       test_no
	     , id
	     , subject_no
	     , test_title
	     , to_char(exam_date, 'RRRR-MM-DD') as "exam_date"
	     , exam_time
	     , status
	  from exam
	 <!-- where id = 'INSTRUCTOR01' -->
	 order 
	    by test_no
</select>

<!-- 시험 상세 조회 -->
<select id="testDetail" resultMap="examResultSet">
	select
	       test_title
	     , q1
	     , q2
	     , q3
	     , q4
	     , q5
	  from exam e inner join exam_question q on e.test_no = q.test_no
	 where e.test_no = #{examNo}
</select>

<!-- 시험 제출 -->
<insert id="testInsert">
	insert
	  into exam_answer
	     (
	       test_no
	     , student_id
	     , a1
	     , a2
	     , a3
	     , a4
	     , a5
	     , status
	     )
	values
	     (
	       #{ testNo }
	     , #{ studentId }
	     , #{ a1 }
	     , #{ a2 }
	     , #{ a3 }
	     , #{ a4 }
	     , #{ a5 }
	     , 'Y'
	     )
</insert>

<!-- 공지사항 목록 조회 -->
<select id="noticeListCount" resultType="_int">
	select
		   count(*)
	  from notice
	 where status = 'Y'
</select>

<select id="selectList" resultMap="noticeResultSet">
	select
	       board_no
	     , board_title
	     , board_writer
	     , to_char(create_date, 'YYYY-MM-DD') as "create_date"
	     , count
	  from notice
	 where status = 'Y'
	 order
	    by board_no desc
</select>

<!-- 공지사항 상세 조회 -->
<select id="selectNotice" resultMap="noticeResultSet">
		select
			   board_no
			 , board_title
		     , board_writer
		     , to_char(create_date, 'YYYY-MM-DD') as "create_date"
		     , board_content
		  from notice
		 where board_no = #{boardNo}
	</select>

<!-- 우리반 게시판 목록 조회 (학습자료) -->
<select id="boardListCount" resultType="_int">
	select
		   count(*)
	  from material_board
	 where status = 'Y'
</select>

<select id="boardList" resultMap="materialResultSet">
	select
	       board_no
	     , board_title
	     , board_writer
	     , to_char(create_date, 'YYYY-MM-DD') as "create_date"
	     , count
	  from material_board
	 where status = 'Y'
	 order
	    by board_no desc
</select>

<!-- 우리반 게시판 학습자료 목록 조회 -->
<select id="MaterialList" resultMap="materialResultSet">
	select
	       board_no
	     , board_title
	     , board_writer
	     , to_char(create_date, 'YYYY-MM-DD') as "create_date"
	     , count
	  from material_board
	 where status = 'Y'
	 order
	    by board_no desc
</select>

<!-- 우리반 게시판 과제 목록 조회 -->
<select id="taskList" resultMap="taskResultSet">
	  select 
	       t.task_no
	     , t.task_title
	     , t.id
	     , to_char(t.start_date, 'YYYY-MM-DD') as "start_date"
	     , to_char(t.end_date, 'YYYY-MM-DD') as "end_date"
         , subject_no
	  from task t
      where subject_no = #{subject} and status = 'N'
      order by t.task_no desc
</select>

<!-- 우리반 게시판 과제 제출여부 목록 조회 -->
<select id="taskSubmitList" resultMap="taskResultSet">
	select 
	        task_no
	      , student_id
	      , submit_content
	      , submit_date
	      , modify_date
	      , status
	from task_submit
	where student_id = #{id}
</select>

<!-- 과제 상세 조회 -->
<select id="selectTask" resultMap="taskResultSet">
	select
		   t.task_no as "task_no"
		 , t.task_title as "task_title"
		 , id
		 , to_char(start_date, 'YYYY-MM-DD') as "start_date"
		 , to_char(end_date, 'YYYY-MM-DD') as "end_date"
		 , t.task_content as "task_content"
		 , ts.status as "status"
		 , ts.submit_content as "submit_content"
         , origin_name
         , change_name
         , end_date
	  from task t
      left join task_file tf on (t.task_no = tf.task_no)
      left join task_submit ts on (t.task_no = ts.task_no)
    where t.task_no = #{taskNo}
    	and (student_id is NULL or student_id = #{studentId})
    	order by t.task_no 
</select>

<!-- 과제 답글 상세 조회 -->
<select id="selectTaskReply" resultMap="taskResultSet">
	SELECT 
		   ts.task_no as "task_no"
		 , t.task_title as "task_title"
		 , ts.student_id as "student_id"
		 , to_char(ts.submit_date, 'YYYY-MM-DD') AS "submit_date"
		 , ts.submit_content as "submit_content"
		 , t.task_content as "task_content"
	  FROM task t
	 INNER JOIN task_submit ts ON t.task_no = ts.task_no
	 WHERE ts.task_no = #{taskNo} and ts.student_id = #{studentId} and ts.status = 'N'
</select>

<!-- 과제 답글 삭제 -->
<update id="deleteTask">
	delete 
	from task_submit
	where task_no = #{taskNo}
</update>

<!-- 과제 등록 -->
<insert id="taskInsert">
	insert
	  into task_submit
	     (
	       task_no
	     , student_id
	     , submit_content
	     , submit_date
	     , status
	     )
	     values
	     (
	       #{taskNo}
	     , #{studentId}
	     , #{submitContent}
	     , sysdate
	     , 'N'
	     )
</insert>

<!-- 과제수정 -->
<update id="updateTask">
	update task_submit
		set submit_content = #{submitContent}
	where task_no = #{taskNo} and student_id = #{studentId}
</update>

<!-- 알람조회 -->
	<select id="selectAlarmList" resultMap="alarmResultSet">
		select
		alarm_no
		, id
		, alarm_content
		, alarm_type
		, status
		, create_date
		from alarm
		where id = #{id} and status = 'N'
	</select>

	<!-- 알람 읽음 처리 -->
	<update id="taskAlarmCheck">
		update alarm
			set status = 'Y'
		where alarm_no = #{alarmNo}
	</update>	



<!-- 우리반 게시판 QnA 목록 조회 -->
<select id="qnaList" resultMap="qnaResultSet">
	select
	       board_no
	     , board_title
	     , board_writer
	     , to_char(create_date, 'YYYY-MM-DD') as "create_date"
	     , count
	  from qna
	 where status = 'Y'
	 order
	    by board_no desc
</select>
</mapper>













