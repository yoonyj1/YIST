<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"mybatis-3-mapper.dtd" >

<mapper namespace="memberMapper">

	<resultMap type="Member" id="memberResultSet">
		<result column="ID" property="id"/>
		<result column="NAME" property="name"/>
		<result column="PWD" property="pwd"/>
		<result column="BIRTH" property="birth"/>
		<result column="PHONE" property="phone"/>
		<result column="IMAGE" property="image"/>
		<result column="EMAIL" property="email"/>
		<result column="POST" property="post"/>
		<result column="ADDRESS" property="address"/>
		<result column="DETAIL_ADDRESS" property="detailAddress"/>
		<result column="SUBJECT" property="subject"/>
		<result column="ATTENDANCE_RATE" property="attendanceRate"/>
		<result column="ENORLL_DATE" property="enrollDate"/>
		<result column="START_DATE" property="startDate"/>
		<result column="END_DATE" property="endDate"/>
		<result column="STATUS" property="status"/>
		<result column="SORT" property="sort"/>
		<result column="EMPLOYEE_DATE" property="employeeDate"/>
		<result column="ROWNUM" property="memberNo"/>
		<result column="INHOUR" property="INHOUR"/>
		<result column="OUTHOUR" property="OUTHOUR"/>
		<result column="y_count" property="y_count"/>
		<result column="n_count" property="n_count"/>
	</resultMap>

	<resultMap id="alarmResultSet" type="Alarm">
		<result column="alarm_no" property="alarmNo"></result>
		<result column="id" property="id"></result>
		<result column="alarm_content" property="alarmContent"></result>
		<result column="alarm_type" property="alarmType"></result>
		<result column="status" property="status"></result>
		<result column="create_date" property="createDate"></result>
		<result column="count" property="count"></result>
	</resultMap>


	<resultMap id="subjectResultSet" type="Subject">
		<result column="SUBJECT_NO" property="subjectNo"></result>
		<result column="CLASS_NO" property="classNo"></result>
		<result column="SUBJECT_NAME" property="subjectName"></result>
		<result column="START_DATE" property="startDate"></result>
		<result column="END_DATE" property="endDate"></result>
		<result column="STATUS" property="status"></result>
		<result column="DAY" property="day"></result>
		<result column="MAXIMUM_SEATS" property="maximumSeats"></result>
		<result column="CURRENT_SEATS" property="currentSeats"></result>
		<result column="FEE" property="fee"></result>
	</resultMap>

	<select id="selectList" resultMap="memberResultSet">
	select
		rownum,member.*,
		name
		,id
		,phone
		,subject
		from member
		where sort=3
	</select>
	
	<select id="selectList2" resultMap="memberResultSet">
	   SELECT INHOUR, OUTHOUR, attendance.id, rownum, member.*,ATTENDANCE_DATE,
       (SELECT COUNT(*) FROM attendance WHERE status = 'Y') AS y_count,
       (SELECT COUNT(*) FROM attendance WHERE status = 'N') AS n_count
		FROM attendance
		JOIN member ON attendance.id = member.id
		WHERE member.sort = 3 AND member.subject = #{subject}
	</select>
	
	<select id="selectList3" resultMap="memberResultSet">
	  SELECT INHOUR, OUTHOUR, attendance.id, rownum, member.*, ATTENDANCE_DATE
	  FROM attendance
	  JOIN member ON attendance.id = member.id
	  WHERE member.sort = 3 AND member.subject = #{subject}
	  AND ATTENDANCE_DATE = #{DATE}
	</select>
	
	<select id="loginMember" resultMap="memberResultSet">
		select
			id
			, name
			, pwd
			, birth
			, phone
			, image
			, email
			, post
			, address
			, detail_address
			, subject
			, enroll_date
			, start_date
			, end_date
			, status
			, sort
			, employee_date
		from member
		where id = #{id} and pwd = #{pwd} and (status
		= 'Y' or status = 'A') and sort = #{sort}
	</select>

	<insert id="insertMember" parameterType="Member">
		insert
		into member
		(
		id
		, name
		, pwd
		, birth
		, phone
		, image
		, email
		, post
		, address
		, detail_address
		, subject
		, enroll_date
		, start_date
		, end_date
		, status
		, sort
		, employee_date
		)
		values
		(
		#{id}
		, #{name}
		, #{pwd}
		, to_date(#{birth},'RRRR/MM/DD')
		, #{phone}
		, default
		, #{email}
		, #{post}
		, #{address}
		, #{detailAddress}
		, #{subject}
		, sysdate
		, to_date(#{startDate},'RRRR/MM/DD')
		, to_date(#{endDate},'RRRR/MM/DD')
		, 'Y'
		, #{sort}
		,
		<if test="sort == 2">
			sysdate
		</if>
		<if test="sort != 2">
			null
		</if>
		)
	</insert>


	<select id="idCheck" resultType="_int">
		select count(*)
		from member
		where
		id = #{checkId}
	</select>

	<!-- 알람삽입 -->
	<insert id="insertAlarm">
		insert
		into alarm
		values
		(
		seq_alarm_no.nextval
		, #{id}
		, #{alarmContent}
		, #{alarmType}
		, #{status}
		, sysdate
		)
	</insert>

	<!-- 선생님 정보 업데이트 -->
	<update id="updateTeacher">
		update
		member
		set
		name=#{name}
		,birth=#{birth}
		,email=#{email}
		,phone=#{phone}
		, post = #{post}
		, address = #{address}
		, detail_Address = #{detailAddress}
		where id = #{id} and status= 'Y'
	</update>

	<select id="selectTeacher" resultMap="memberResultSet">
		select
		id
		, name
		, pwd
		, birth
		, phone
		, image
		, email
		, post
		, address
		, detail_address
		, subject
		, enroll_date
		, start_date
		, end_date
		, status
		, sort
		, employee_date
		from member
		where id = #{id}
	</select>

	<select id="selectSubjectList" resultMap="subjectResultSet">
		select
		SUBJECT_NO
		,CLASS_NO
		,SUBJECT_NAME
		,TO_CHAR(START_DATE,'RRRR/MM/DD') as start_date
		,TO_CHAR(END_DATE,'RRRR/MM/DD') as end_date
		,DAY
		,MAXIMUM_SEATS
		,CURRENT_SEATS
		,FEE
		from subject
		where status = 'N'
		order
		by start_date
	</select>

	<select id="selectInstructorList" resultMap="memberResultSet">
		select
		id
		, NAME
		, SUBJECT
		, STATUS
		, SORT
		from
		member
		where
		sort = 2
		and status = 'Y'
		and subject is null
		order by
		name
	</select>

	<update id="updateInstructor">
		update
		member
		set subject = #{subject}
		where
		id = #{id}
		and sort = 2
	</update>

	<select id="selectInstructor" resultMap="memberResultSet">
		select
		id
		, NAME
		, SUBJECT
		, STATUS
		, SORT
		from
		member
		where
		sort = 2
		and status = 'Y'
		and subject = #{subject}
	</select>

	<update id="deleteInstructor">
		update
		member
		set
		subject = null
		where
		id = #{id}
		and sort = 2
	</update>

	
	<select id="selectStudentList" resultMap="memberResultSet">
		select
				  id
				, name
				, birth
				, phone
				, image
				, email
				, post
				, address
				, detail_address
				, subject
				from member
				where id = #{id}	
	</select>

	<select id="selectExamMemberList" resultMap="memberResultSet">
		select
		id
		, name
		from member
		where sort = 3 and subject = #{subject} and status =
		'Y'
	</select>

	
</mapper>

























