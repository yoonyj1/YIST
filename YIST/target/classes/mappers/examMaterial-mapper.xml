<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"mybatis-3-mapper.dtd" >

<mapper namespace="examMaterialMapper">
	
	<resultMap id="classResultSet" type="Class">
		<result column="CLASS_NO" property="classNo"></result>
		<result column="CLASS_NAME" property="className"></result>
	</resultMap>
	
	<resultMap id="examMaterialResultSet" type="ExamMaterial">
		<result column="BOARD_NO" property="boardNo"></result>
		<result column="CLASS_NO" property="classNo"></result>
		<result column="BOARD_TITLE" property="boardTitle"></result>
		<result column="BOARD_WRITER" property="boardWriter"></result>
		<result column="BOARD_CONTENT" property="boardContent"></result>
		<result column="ORIGIN_NAME" property="originName"></result>
		<result column="CHANGE_NAME" property="changeName"></result>
		<result column="COUNT" property="count"></result>
		<result column="CREATE_DATE" property="createDate"></result>
		<result column="STATUS" property="status"></result>
		<result column="CLASS_NAME" property="className"></result>
	</resultMap>


	<select id="selectExamMaterialCount" resultType="_int">
	
		select
				count(*)
		  from
		  		EXAM_BOARD
		 where
		 		status = 'Y' 				
	
	</select>
	
	<select id="selectExamMaterialList" resultMap="examMaterialResultSet">
	
		select
				board_no
				, eb.class_no
				, c.class_name as class_name
				, board_title
				, board_writer
				, to_char(create_date,'RRRR/MM/DD') as "create_date"
		  from
		  		exam_board eb, class c
		 where
		 		eb.status = 'Y'
           and eb.class_no = c.class_no
		 order by board_no desc			
	
	</select>
	
	<select id="selectSearchCount" resultType="_int">
		select
				count(*)
		  from
		  		(
		  			select
		  					board_no
							, eb.class_no
							, c.class_name as class_name
							, board_title
							, board_writer
							, to_char(create_date,'RRRR/MM/DD') as "create_date"
					  from
					  		exam_board eb, class c
					 where
					 		eb.status = 'Y'
			           and eb.class_no = c.class_no
           				<choose>
           					<when test="condition == 'writer'">
           						and board_writer like '%'||#{ keyword }||'%' 
           					</when>
           					<when test="condition == 'title'">
           						and board_title like '%'||#{ keyword }||'%' 
           					</when>
           					<when test="condition == 'no'">
           						and board_no like '%'||#{ keyword }||'%' 
           					</when>
           					<otherwise>
           						and c.class_name like '%'||#{ keyword }||'%' 
           					</otherwise>
           				</choose>
		  		)

	</select>
	
	<select id="selectSearchList" resultMap="examMaterialResultSet">
		select
				board_no
				, eb.class_no
				, c.class_name as class_name
				, board_title
				, board_writer
				, to_char(create_date,'RRRR/MM/DD') as "create_date"
		  from
		  		exam_board eb, class c
		 where
		 		eb.status = 'Y'
           and eb.class_no = c.class_no
		<choose>
           		<when test="condition == 'writer'">
           			and board_writer like '%'||#{ keyword }||'%' 
           		</when>
           		<when test="condition == 'title'">
           			and board_title like '%'||#{ keyword }||'%' 
           		</when>
           		<when test="condition == 'no'">
           			and board_no like '%'||#{ keyword }||'%' 
           		</when>
           		<otherwise>
           			and c.class_name like '%'||#{ keyword }||'%' 
           		</otherwise>
          </choose>           
		 order by board_no desc		
	</select>
	
	
	<select id="selectMaterial" resultMap="examMaterialResultSet">
	
		select
				board_no
				, eb.class_no
				, c.class_name as class_name
				, board_title
				, board_writer
				, board_content
				, origin_name
				, change_name
				, to_char(create_date,'RRRR/MM/DD') as "create_date"
		  from
		  		exam_board eb, class c
		 where
		 		eb.status = 'Y'
           and eb.class_no = c.class_no
		   and board_no = #{ boardNo}
		   
	</select>
	
	
	<insert id="insertExamMaterial">
	
		insert
		  into exam_board
		    (
		    	BOARD_NO
			 ,	CLASS_NO
			 ,	BOARD_TITLE
			 ,	BOARD_WRITER
			 ,	BOARD_CONTENT
			 ,	ORIGIN_NAME
			 ,	CHANGE_NAME
			 ,	CREATE_DATE
			 ,	STATUS
		    )
		values
			(
				SEQ_EBNO.nextval
			 ,  #{ classNo }
			 ,  #{ boardTitle }
			 ,  #{ boardWriter }
			 ,  #{ boardContent }
			 ,  #{ originName }
			 ,  #{ changeName }
			 ,  sysdate
			 ,  'Y'
			)   
		  		
	</insert>
	
	<update id="updateExamMaterial">
		update
				exam_board
		   set
		   		board_title = #{ boardTitle }
		   	  , class_no = #{ classNo }
		   	  , board_content = #{ boardContent } 	
		   	  , origin_name = #{ originName }
		   	  , change_name = #{ changeName }
		  where  	  
				board_no = #{ boardNo }
	</update>
	
	<update id="deleteExamMaterial">

		update
				exam_board
		   set
		   		status = 'N'
		   		, origin_name = NULL
		   		, change_name = NULL
		  where
		  		board_no = #{ boardNo }	
	
	</update>
	

</mapper>