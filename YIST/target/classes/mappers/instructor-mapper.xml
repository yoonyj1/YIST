<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"mybatis-3-mapper.dtd" >

<mapper namespace="instructorMapper">

	<resultMap id="taskResultSet" type="Task">
		<result column="task_no" property="taskNo"></result>
		<result column="file_no" property="fileNo"></result>
		<result column="subject_no" property="subjectNo"></result>
		<result column="id" property="instructorId"></result>
		<result column="student_id" property="studentId"></result>
		<result column="task_title" property="taskTitle"></result>
		<result column="task_content" property="taskContent"></result>
		<result column="start_date" property="startDate"></result>
		<result column="end_date" property="endDate"></result>
		<result column="origin_name" property="originName"></result>
		<result column="change_name" property="changeName"></result>
		<result column="file_level" property="fileLevel"></result>
		<result column="status" property="status"></result>

	</resultMap>

	<resultMap id="taskSubmitResultSet" type="TaskSubmit">
		<result column="task_no" property="taskNo"></result>
		<result column="student_id" property="id"></result>
		<result column="task_title" property="taskTitle"></result>
		<result column="submit_content" property="submitContent"></result>
		<result column="name" property="name"></result>
		<result column="submit_date" property="submitDate"></result>
		<result column="modify_date" property="modifyDate"></result>
		<result column="status" property="status"></result>
	</resultMap>

	<resultMap id="examResultSet" type="Exam">
		<result column="test_no" property="testNo"></result>
		<result column="id" property="id"></result>
		<result column="student_Id" property="studentId"></result>
		<result column="subject_no" property="subjectNo"></result>
		<result column="test_title" property="testTitle"></result>
		<result column="exam_date" property="examDate"></result>
		<result column="exam_time" property="examTime"></result>
		<result column="status" property="status"></result>
		<result column="name" property="name"></result>
		<result column="q1" property="q1"></result>
		<result column="q2" property="q2"></result>
		<result column="q3" property="q3"></result>
		<result column="q4" property="q4"></result>
		<result column="q5" property="q5"></result>
		<result column="a1" property="a1"></result>
		<result column="a2" property="a2"></result>
		<result column="a3" property="a3"></result>
		<result column="a4" property="a4"></result>
		<result column="a5" property="a5"></result>
		<result column="score" property="score"></result>
		<result column="submit_status" property="submitStatus"></result>
	</resultMap>

	<resultMap id="alarmResultSet" type="Alarm">
		<result column="alarm_no" property="alarmNo"></result>
		<result column="id" property="id"></result>
		<result column="alarm_content" property="alarmContent"></result>
		<result column="alarm_type" property="alarmType"></result>
		<result column="status" property="status"></result>
		<result column="create_date" property="createDate"></result>
	</resultMap>
	
	<resultMap type="Member" id="memberResultSet">
		<result column="ID" property="id" />
		<result column="NAME" property="name" />
		<result column="PWD" property="pwd" />
		<result column="BIRTH" property="birth" />
		<result column="PHONE" property="phone" />
		<result column="IMAGE" property="image" />
		<result column="EMAIL" property="email" />
		<result column="POST" property="post" />
		<result column="ADDRESS" property="address" />
		<result column="DETAIL_ADDRESS" property="detailAddress" />
		<result column="SUBJECT" property="subject" />
		<result column="ATTENDANCE_RATE" property="attendanceRate" />
		<result column="ENORLL_DATE" property="enrollDate" />
		<result column="START_DATE" property="startDate" />
		<result column="END_DATE" property="endDate" />
		<result column="STATUS" property="status" />
		<result column="SORT" property="sort" />
		<result column="EMPLOYEE_DATE" property="employeeDate" />
	</resultMap>
	
	<insert id="insertTask">
		insert
			into task
					(
					  task_no
		  	        , subject_no
					, id
					, task_title
					, task_content
					, start_date
					, end_date
					)
					values
					(
					    seq_taskno.nextval
					  , #{subjectNo}
					  , #{instructorId}
					  , #{taskTitle}
					  , #{taskContent}
					  , #{startDate}
					  , #{endDate}
					)
	</insert>

	<insert id="insertTaskFile">
		insert
			into task_file
					(
					  file_no
					, task_no
					, origin_name
					, change_name
					, file_level
					, status
					)
					values
					(
					  seq_tfno.nextval
					, seq_taskno.currval
					, #{originName}
					, #{changeName}
					, 1
					, 'N'
					)
	</insert>

	<insert id="insertTaskSubmit">
		insert
			into task_submit
					(
					  task_no
		  	        , student_id
					, submit_content
					, submit_date
					, modify_date
					, status
					)
					values
					(
					    seq_taskno.currval
					  , #{id}
					  , NULL
					  , NULL
					  , NULL
					  , 'N'
					)
	</insert>

	<select id="selectTaskListCount" resultType="_int" parameterType="Map">
		select count(t.task_no) as "taskListCount"
		from task t
		left join task_file tf on (t.task_no = tf.task_no)
		where id = #{id} and t.status = 'N'
		<if test="startDate != 'none'">
			and start_date between to_date(#{startDate},'RRRR-MM-DD')
			and to_date(#{endDate},'RRRR-MM-DD')
		</if>
		<if test="keyword != 'none'">
			and task_title like '%' || #{keyword} || '%'
		</if>
	</select>

	<select id="selectTaskList" resultMap="taskResultSet" parameterType="Map">
		select
				t.task_no
			  , file_no
			  , subject_no
			  , id
			  , task_title
			  , task_content
			  , to_char(start_date, 'RRRR-MM-DD') as "start_date"
			  , to_char(end_date, 'RRRR-MM-DD') as "end_date"
			  , origin_name
			  , change_name
		      , file_level
			  , tf.status
		from task t
		left outer join task_file tf on (t.task_no = tf.task_no)
		where id = #{id} 
            and (t.status = 'N')
		<if test="startDate != 'none'">
			and start_date between to_date(#{startDate},'RRRR-MM-DD')
			and to_date(#{endDate},'RRRR-MM-DD')
		</if>
		<if test="keyword != 'none'">
			and task_title like '%'||#{keyword}||'%'
		</if>
		order by task_no desc
	</select>

	<update id="updateTask">
		update task
			set task_title = #{taskTitle}
			  , task_content = #{taskContent}
			  , start_date = to_date(#{startDate}, 'RR-MM-DD')
			  , end_date = to_date(#{endDate}, 'RR-MM-DD')
		where task_no = #{taskNo}
	</update>

	<update id="updateTaskFile">
		update task_file
			set origin_name = #{originName}
			  , change_name = #{changeName}
		where task_no = #{taskNo}
	</update>

	<update id="deleteTask">
		update task
			set status = 'Y'
		where task_no = #{taskNo}
	</update>

	<update id="deleteTaskFile">
		update task_file
			set status = 'Y'
		where task_no = #{taskNo}
	</update>

	<update id="deleteTaskSubmit">
		update task_submit
			set status = 'Y'
		where task_no = #{taskNo}
	</update>

	<select id="selectSubmitList" resultMap="taskSubmitResultSet">
		SELECT
			t.task_no as "task_no"
		  , t.task_title as "task_title"
		  , submit_content as "submit_content"
		  , s.student_id as "studentId"
		  , name
		  , submit_date
		  , s.status as "status"
		FROM task_submit s
		join member m on (s.student_id = m.id)
		join task t on (s.task_no = t.task_no)
		where s.task_no = #{taskNo}
	</select>

	<update id="checkTaskSubmit">
		update task_submit
			set status = 'Y'
		where task_no = #{taskNo} and student_id = #{studentId}
	</update>

	<select id="selectExamList" resultMap="examResultSet">
		select
			test_no
		  , id
		  , subject_no
		  , test_title
		  , status
		from exam
		where id = #{id}
		order 
			by test_no
	</select>

	<select id="selectExamMemberList" resultMap="examResultSet">
		select
			  ea.student_id as "student_id"
			, name
	        , ea.status "status"
	        , ea.score as "score"
	        , test_no
		from member m
		join exam_answer ea on (m.id = ea.student_id)
		where sort = 3 and subject = #{subject}
	</select>

	<select id="selectQuestion" resultMap="examResultSet">
		select
			  test_no
			, test_title
			, q1
			, q2
			, q3
			, q4
			, q5
			, a1
			, a2
			, a3
			, a4
			, a5
		from exam_question
		join exam using (test_no)
		where test_no = #{testNo}
	</select>

	<select id="selectExamSubmitList" resultMap="examResultSet">
		select
				e.test_no "test_no"
              , test_title
		      , student_id
			  , name
			  , a1
			  , a2
			  , a3
		      , a4
			  , a5
			  , ea.status as "submit_status"
			  , nvl(score, 0) as "score"
        from exam e
        left join exam_answer ea on (e.test_no = ea.test_no)
        left join member m on (ea.student_id = m.id)
		where e.test_no = #{testNo}
	</select>

	<select id="selectSubmitMember" resultMap="examResultSet">
		select
		test_no
		, e.id as
		"id"
		, name
		, a1
		, a2
		, a3
		, a4
		, a5
		, e.status
		, nvl(score, 0) as "score"
		from exam_answer e
		join member m on (e.id =
		m.id)
		where test_no =
		#{testNo} and e.id = #{id}
	</select>

	<!-- 시험시작(학생) -->
	<insert id="setExam">
		insert 
			into exam_answer
				(
					test_no
				  , student_id
				  , a1
				  , a2
				  , a3
				  , a4
				  , a5
				  , status
				  , score
				  , exam_date
				)
				values
				(
					#{testNo}
				  , #{studentId}
				  , NULL
				  , NULL
				  , NULL
				  , NULL
				  , NULL
				  , 'N'
				  , 999
				  , sysdate
				)
	</insert>

	<update id="updateSetExam">
		update exam_answer
			set a1 = NULL
			  , a2 = NULL
			  , a3 = NULL
			  , a4 = NULL
			  , a5 = NULL
			  , status = 'N'
			  , score = 999
			  , exam_date = sysdate
		where test_no = #{testNo} and student_id = #{studentId}
	</update>

	<!-- 시험시간 설정 -->
	<update id="setExamTime" >
		update exam
			set exam_time = #{examTime}
		where test_no = #{testNo}
	</update>

	<!-- 시험 채점 -->
	<update id="updateSetExamAnswer">
		update exam_answer
			set score = #{score}
			  , status = 'Y'
		where test_no = #{testNo} and student_id = #{studentId} 
			
	</update>
	
	<insert id="insertAlarm">
		insert
		into alarm
		(
		alarm_no
		, id
		, alarm_content
		,
		alarm_type
		, status
		, create_date
		)
		values
		(
		seq_ano.nextval
		, #{id}
		,
		#{alarmContent}
		, #{alarmType}
		, 'N'
		, sysdate
		)

	</insert>

<select id="selectGradeList" resultMap="examResultSet">
	select 
	        ea.test_no
	      , e.test_title
	      , student_id
	      , score
	      , name
	from exam_answer ea
	join exam e on (e.test_no = ea.test_no)
	join member m on (ea.student_id = m.id)
	where m.subject = #{subject}
	group by ea.test_no, e.test_title, student_id, score, name
	order by test_no
</select>

<select id="selectAjaxGradeList" resultMap="examResultSet">
	select 
	        ea.test_no
	      , e.test_title
	      , student_id
	      , score
	      , name
	from exam_answer ea
	join exam e on (e.test_no = ea.test_no)
	join member m on (ea.student_id = m.id)
	where m.subject = #{subjectNo} and ea.test_no = #{testNo}
	group by ea.test_no, e.test_title, student_id, score, name
	order by test_no
</select>

<select id="selectExamScore" resultMap="examResultSet">
	select
	          ea.test_no as "test_no"
	        , sum(score) as "score"
	        , e.test_title as "test_title"
	        , count(ea.test_no) as "count"
	from exam_answer ea
	join exam e on (e.test_no = ea.test_no)
	join member m on (ea.student_id = m.id)
	where m.subject = #{subject}
	group by ea.test_no, e.test_title
</select>


<!-- 알람조회 -->
	<select id="selectInsAlarmList" resultMap="alarmResultSet">
		select
		alarm_no
		, id
		, alarm_content
		, alarm_type
		, status
		, create_date
		from alarm
		where id = #{id} and status = 'N'
	</select>

<!-- 알람 읽음 처리 -->
<update id="insAlarmCheck">
	update alarm
		set status = 'Y'
	where alarm_no = #{alarmNo}
</update>


<select id="selectTaskMember" resultMap="memberResultSet">
	select
			  ts.student_id as "id"
			, name
	        , ts.status "status"
	from member m
	join task_submit ts on (ts.student_id = m.id)
    where ts.status = 'N' and m.subject = #{subject}
    group by ts.student_id, name, ts.status	
</select>

</mapper>





















